version: "3.7"
services:
    app:
        build:
            args:
                user: lns
                uid: 1000
            context: ./
            dockerfile: Dockerfile
        image: lns
        container_name: lns-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        networks:
            - lns

    db:
        image: mysql:8.0
        container_name: lns-db
        restart: unless-stopped
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        ports:
            - '3307:3306'
        volumes:
            - ./docker-compose/mysql:/docker-entrypoint-initdb.d
        networks:
            - lns

    nginx:
        image: nginx:alpine
        container_name: lns-nginx
        restart: unless-stopped
        ports:
            - 8080:80
        volumes:
            - ./:/var/www
            - ./docker-compose/nginx:/etc/nginx/conf.d/
        networks:
            - lns
    redis:
        image: redis:6.2
        container_name: lns-redis
        ports:
            - "6382:6379"
        networks:
            - lns
    # Elasticsearch Docker Images: https://www.docker.elastic.co/
    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.4.0
        container_name: lns-elasticsearch
        environment:
            - xpack.security.enabled=false
            - discovery.type=single-node
        ulimits:
            memlock:
                soft: -1
                hard: -1
            nofile:
                soft: 65536
                hard: 65536
        cap_add:
            - IPC_LOCK
        volumes:
            - elasticsearch-data:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - lns
    kibana:
        container_name: lns-kibana
        image: docker.elastic.co/kibana/kibana:7.4.0
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - "5601:5601"
        networks:
            - lns
        depends_on:
            - elasticsearch
volumes:
    elasticsearch-data:
        driver: local
networks:
    lns:
        driver: bridge
